name: 'Deploy to PROD'

on:
  workflow_dispatch:

jobs:
  deploy_frontend:
    name: 'Deploy Frontend'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: 'Checkout Github Repo'
        uses: actions/checkout@v3
      - name: Install Root Dependencies
        run: npm install
      - name: Install React App Dependencies
        run: |
          cd frontend
          npm install
      - name: Create .env File Locally
        run: |
          cd frontend
          echo "${{secrets.ENV_FRONTEND }}" > .env
        env:
          ENV_FRONTEND: ${{secrets.ENV_FRONTEND}}
      - name: Get Version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Build React Application
        run: |
          cd frontend
          npm run build
      - name: Initialize Firebase Project
        uses: w9jds/firebase-action@master
        with:
          args: use prod
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy React App
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:sharingexcess
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: 'production'
          version: ${{ steps.package-version.outputs.current-version}}
          set_commits: 'skip'

  deploy_backend:
    name: 'Deploy Backend'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: 'Checkout Github Repo'
        uses: actions/checkout@v3
      - name: Install Root Dependencies
        run: npm install
      - name: Install Node App Dependencies
        run: |
          cd backend
          npm install
      - name: Create .env File Locally
        run: |
          cd backend
          echo "${{secrets.ENV_BACKEND }}" > .env
        env:
          ENV_BACKEND: ${{secrets.ENV_BACKEND}}
      - name: Initialize Firebase Project
        uses: w9jds/firebase-action@master
        with:
          args: use prod
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy Firebase Functions
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy Node API
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:sharingexcess-api
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deploy Firestore Security Rules
        uses: w9jds/firebase-action@master
        with:
          args: firebase deploy --only firestore:rules
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
